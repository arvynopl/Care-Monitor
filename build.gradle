plugins {
    id 'java'
    id 'application'
}

group 'com.caremonitor'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'org.jfree:jfreechart:1.5.3'
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'com.miglayout:miglayout-swing:11.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation 'com.h2database:h2:2.1.214'
}

application {
    mainClass = 'com.caremonitor.CareMonitorApp'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.caremonitor.CareMonitorApp'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.caremonitor.CareMonitorApp'
}

task cleanTestDb {
    doLast {
        delete fileTree(dir: 'testdb', include: '**/*')
    }
}

clean.dependsOn cleanTestDb

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
